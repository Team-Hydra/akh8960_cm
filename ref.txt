diff --git a/arch/arm/mach-msm/htc/shooter/board-shooter-regulator.c b/arch/arm/mach-msm/htc/shooter/board-shooter-regulator.c
index ac4fb0f..fb1b88c 100644
--- a/arch/arm/mach-msm/htc/shooter/board-shooter-regulator.c
+++ b/arch/arm/mach-msm/htc/shooter/board-shooter-regulator.c
@@ -423,31 +423,34 @@ void __init shooter_pm8901_gpio_mpp_init(void)
 
 /* SAW regulator constraints */
 struct regulator_init_data msm_saw_regulator_pdata_s0 =
-	/*	      ID  vreg_name	       min_uV   max_uV */
-	SAW_VREG_INIT(PM8901_S0, "8901_s0",	       840000, 1250000);
+/* ID vreg_name min_uV max_uV */
+SAW_VREG_INIT(PM8901_S0, "8901_s0",	800000, 1325000);
 struct regulator_init_data msm_saw_regulator_pdata_s1 =
-	SAW_VREG_INIT(PM8901_S1, "8921_s1",	       840000, 1250000);
+SAW_VREG_INIT(PM8901_S1, "8901_s1",	800000, 1325000);
 
-/* RPM regulator constraints */
-static struct rpm_regulator_init_data rpm_regulator_init_data[] __devinitdata = {
+/* RPM early regulator constraints */
+static struct rpm_regulator_init_data rpm_regulator_early_init_data[] __devinitdata = {
 	/*	 ID       a_on pd ss min_uV   max_uV   init_ip    freq */
 	RPM_SMPS(PM8058_S0, 0, 1, 1,  500000, 1250000, SMPS_HMIN, 1p92),
 	RPM_SMPS(PM8058_S1, 0, 1, 1,  500000, 1250000, SMPS_HMIN, 1p92),
+};
 
+/* RPM regulator constraints */
+static struct rpm_regulator_init_data rpm_regulator_init_data[] = {
 	/*	ID        a_on pd ss min_uV   max_uV   init_ip */
-	RPM_LDO(PM8058_L0,  0, 0, 0, 1200000, 1200000, LDO150HMIN),
+	RPM_LDO(PM8058_L0,  0, 1, 0, 1200000, 1200000, LDO150HMIN),
 	RPM_LDO(PM8058_L1,  0, 1, 0, 1350000, 1350000, LDO300HMIN),
 	RPM_LDO(PM8058_L2,  0, 1, 0, 1800000, 2600000, LDO300HMIN),
 	RPM_LDO(PM8058_L3,  0, 1, 0, 1800000, 3000000, LDO150HMIN),
 	RPM_LDO(PM8058_L4,  0, 1, 0, 2850000, 2850000,  LDO50HMIN),
-	RPM_LDO(PM8058_L5,  0, 0, 0, 2850000, 2850000, LDO300HMIN),
-	RPM_LDO(PM8058_L6,  0, 0, 0, 3000000, 3600000,  LDO50HMIN),
-	RPM_LDO(PM8058_L7,  0, 0, 0, 1800000, 1800000,  LDO50HMIN),
-	RPM_LDO(PM8058_L8,  0, 1, 0, 2850000, 2850000, LDO300HMIN),
+	RPM_LDO(PM8058_L5,  0, 1, 0, 2850000, 2850000, LDO300HMIN),
+	RPM_LDO(PM8058_L6,  0, 1, 0, 3000000, 3600000,  LDO50HMIN),
+	RPM_LDO(PM8058_L7,  0, 1, 0, 1800000, 1800000,  LDO50HMIN),
+	RPM_LDO(PM8058_L8,  0, 1, 0, 1800000, 1800000, LDO300HMIN),
 	RPM_LDO(PM8058_L9,  0, 1, 0, 1800000, 1800000, LDO300HMIN),
-	RPM_LDO(PM8058_L10, 0, 1, 0, 2850000, 2850000, LDO300HMIN),
-	RPM_LDO(PM8058_L11, 0, 1, 0, 1800000, 1800000, LDO150HMIN),
-	RPM_LDO(PM8058_L12, 0, 1, 0, 1800000, 1800000, LDO150HMIN),
+	RPM_LDO(PM8058_L10, 0, 1, 0, 2800000, 2800000, LDO300HMIN),
+	RPM_LDO(PM8058_L11, 0, 1, 0, 2850000, 2850000, LDO150HMIN),
+	RPM_LDO(PM8058_L12, 0, 1, 0, 3000000, 3200000, LDO150HMIN),
 	RPM_LDO(PM8058_L13, 0, 1, 0, 2050000, 2050000, LDO300HMIN),
 	RPM_LDO(PM8058_L14, 0, 1, 0, 2850000, 2850000, LDO300HMIN),
 	RPM_LDO(PM8058_L15, 0, 1, 0, 2800000, 2800000, LDO300HMIN),
@@ -456,8 +459,8 @@ static struct rpm_regulator_init_data rpm_regulator_init_data[] __devinitdata =
 	RPM_LDO(PM8058_L18, 0, 1, 1, 2200000, 2200000, LDO150HMIN),
 	RPM_LDO(PM8058_L19, 0, 1, 0, 1800000, 1800000, LDO150HMIN),
 	RPM_LDO(PM8058_L20, 0, 1, 0, 1800000, 1800000, LDO150HMIN),
-	RPM_LDO(PM8058_L21, 1, 0, 0, 1200000, 1200000, LDO150HMIN),
-	RPM_LDO(PM8058_L22, 0, 0, 0, 1140000, 1300000, LDO300HMIN),
+	RPM_LDO(PM8058_L21, 1, 1, 0, 1200000, 1200000, LDO150HMIN),
+	RPM_LDO(PM8058_L22, 0, 0, 0, 1200000, 1200000, LDO300HMIN),
 	RPM_LDO(PM8058_L23, 0, 0, 0, 1200000, 1200000, LDO300HMIN),
 	RPM_LDO(PM8058_L24, 0, 1, 0, 1200000, 1200000, LDO150HMIN),
 	RPM_LDO(PM8058_L25, 0, 1, 0, 1200000, 1200000, LDO150HMIN),
@@ -476,34 +479,40 @@ static struct rpm_regulator_init_data rpm_regulator_init_data[] __devinitdata =
 
 	/*	ID        a_on pd ss min_uV   max_uV   init_ip */
 	RPM_LDO(PM8901_L0,  0, 1, 0, 1200000, 1200000, LDO300HMIN),
-	RPM_LDO(PM8901_L1,  0, 1, 0, 3100000, 3100000, LDO300HMIN),
-	RPM_LDO(PM8901_L2,  0, 0, 0, 2850000, 3300000, LDO300HMIN),
+	RPM_LDO(PM8901_L1,  0, 1, 0, 3200000, 3200000, LDO300HMIN),
+	RPM_LDO(PM8901_L2,  0, 1, 0, 2850000, 3300000, LDO300HMIN),
 	RPM_LDO(PM8901_L3,  0, 1, 0, 3300000, 3300000, LDO300HMIN),
-	RPM_LDO(PM8901_L4,  0, 1, 0, 1800000, 1800000, LDO300HMIN),
-	RPM_LDO(PM8901_L5,  0, 0, 0, 2850000, 2850000, LDO300HMIN),
-	RPM_LDO(PM8901_L6,  0, 1, 0, 2200000, 2200000, LDO300HMIN),
+	RPM_LDO(PM8901_L4,  0, 1, 0, 2850000, 2850000, LDO300HMIN),
+	RPM_LDO(PM8901_L5,  0, 1, 0, 2850000, 2850000, LDO300HMIN),
+	RPM_LDO(PM8901_L6,  0, 0, 0, 2200000, 2200000, LDO300HMIN),
 
 	/*	 ID       a_on pd ss min_uV   max_uV   init_ip   freq */
-	RPM_SMPS(PM8901_S2, 0, 1, 0, 1300000, 1300000, FTS_HMIN, 1p60),
+	RPM_SMPS(PM8901_S2, 0, 1, 0, 1200000, 1200000, FTS_HMIN, 1p60),
 	RPM_SMPS(PM8901_S3, 0, 1, 0, 1100000, 1100000, FTS_HMIN, 1p60),
-	RPM_SMPS(PM8901_S4, 0, 1, 0, 1140000, 1300000, FTS_HMIN, 1p60),
+	RPM_SMPS(PM8901_S4, 0, 1, 0, 1200000, 1200000, FTS_HMIN, 1p60),
 
 	/*	ID        a_on pd ss */
-	RPM_VS(PM8901_LVS0, 0, 0, 0),
+	RPM_VS(PM8901_LVS0, 0, 1, 0),
 	RPM_VS(PM8901_LVS1, 0, 1, 0),
-	RPM_VS(PM8901_LVS2, 0, 1, 0),
-	RPM_VS(PM8901_LVS3, 0, 1, 0),
-	RPM_VS(PM8901_MVS0, 0, 1, 0),
+	RPM_VS(PM8901_LVS2, 0, 0, 0),
+	RPM_VS(PM8901_LVS3, 0, 0, 0),
+	RPM_VS(PM8901_MVS0, 0, 0, 0),
 
 	/*     ID         a_on pin_func pin_ctrl */
 	RPM_PC(PM8058_S2,   0, ENABLE,  RPM_VREG_PIN_CTRL_PM8058_A0),
 	RPM_PC(PM8901_S4,   0, ENABLE,  RPM_VREG_PIN_CTRL_PM8901_A0),
 };
 
+struct rpm_regulator_platform_data shooter_rpm_regulator_early_pdata __devinitdata = {
+	.init_data		= rpm_regulator_early_init_data,
+	.num_regulators		= ARRAY_SIZE(rpm_regulator_early_init_data),
+	.version		= RPM_VREG_VERSION_8660,
+	.vreg_id_vdd_mem	= RPM_VREG_ID_PM8058_S0,
+	.vreg_id_vdd_dig	= RPM_VREG_ID_PM8058_S1,
+};
+
 struct rpm_regulator_platform_data shooter_rpm_regulator_pdata __devinitdata = {
 	.init_data		= rpm_regulator_init_data,
 	.num_regulators		= ARRAY_SIZE(rpm_regulator_init_data),
 	.version		= RPM_VREG_VERSION_8660,
-	.vreg_id_vdd_mem	= RPM_VREG_ID_PM8058_S0,
-	.vreg_id_vdd_dig	= RPM_VREG_ID_PM8058_S1,
 };
diff --git a/arch/arm/mach-msm/htc/shooter/board-shooter.c b/arch/arm/mach-msm/htc/shooter/board-shooter.c
index b45680c..c850c2f 100644
--- a/arch/arm/mach-msm/htc/shooter/board-shooter.c
+++ b/arch/arm/mach-msm/htc/shooter/board-shooter.c
@@ -1694,17 +1694,29 @@ static struct platform_device msm_charger_device = {
 #define SMPS_HMIN	RPM_VREG_8660_SMPS_HPM_MIN_LOAD
 #define FTS_HMIN	RPM_VREG_8660_FTSMPS_HPM_MIN_LOAD
 
-static struct platform_device rpm_regulator_device __devinitdata = {
+static struct platform_device rpm_regulator_early_device = {
 	.name	= "rpm-regulator",
-	.id	= -1,
+	.id	= 0,
+	.dev	= {
+		.platform_data = &shooter_rpm_regulator_early_pdata,
+	},
+};
+
+static struct platform_device rpm_regulator_device = {
+	.name	= "rpm-regulator",
+	.id	= 1,
 	.dev	= {
 		.platform_data = &shooter_rpm_regulator_pdata,
 	},
 };
 
-static struct platform_device *early_devices[] __initdata = {
+static struct platform_device *early_regulators[] __initdata = {
 	&msm_device_saw_s0,
 	&msm_device_saw_s1,
+	&rpm_regulator_early_device,
+};
+
+static struct platform_device *early_devices[] __initdata = {
 #ifdef CONFIG_MSM_BUS_SCALING
 	&msm_bus_apps_fabric,
 	&msm_bus_sys_fabric,
@@ -3045,9 +3057,12 @@ static void __init shooter_init(void)
 
 	regulator_suppress_info_printing();
 
+	/* Initialize regulators needed for clock_init. */
+	platform_add_devices(early_regulators, ARRAY_SIZE(early_regulators));
+
 	if (msm_xo_init())
 		pr_err("Failed to initialize XO votes\n");
-	
+
 	platform_device_register(&rpm_regulator_device);
 
 	msm_clock_init(&msm8x60_clock_init_data);
diff --git a/arch/arm/mach-msm/htc/shooter/board-shooter.h b/arch/arm/mach-msm/htc/shooter/board-shooter.h
index 9d62363..802e6db 100644
--- a/arch/arm/mach-msm/htc/shooter/board-shooter.h
+++ b/arch/arm/mach-msm/htc/shooter/board-shooter.h
@@ -133,6 +133,7 @@
 
 extern struct regulator_init_data msm_saw_regulator_pdata_s0;
 extern struct regulator_init_data msm_saw_regulator_pdata_s1;
+extern struct rpm_regulator_platform_data shooter_rpm_regulator_early_pdata __devinitdata;
 extern struct rpm_regulator_platform_data shooter_rpm_regulator_pdata __devinitdata;
 extern struct platform_device msm8x60_8901_mpp_vreg __devinitdata;
 extern struct pm8901_vreg_pdata pm8901_regulator_pdata[];
